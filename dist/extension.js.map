{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://ShinhanDS/./src/translators/index.ts","webpack://ShinhanDS/./src/translators/map.ts","webpack://ShinhanDS/external commonjs \"vscode\"","webpack://ShinhanDS/webpack/bootstrap","webpack://ShinhanDS/./src/extension.ts"],"sourcesContent":["// import { translate } from \"@vitalets/google-translate-api\";\r\n// const translate = require(\"translate-google\");\r\n// import { HttpProxyAgent } from \"http-proxy-agent\";\r\nimport { koreanTexts } from \"./map\";\r\n\r\n// const agent = new HttpProxyAgent(\"http://168.63.76.32:3128\");\r\n\r\nexport const translateText = (input: string, lang = \"en\") => {\r\n  return koreanTexts[input as keyof typeof koreanTexts] || \"Not found\";\r\n  // const response = await translate(input, {\r\n  //   to: lang,\r\n  //   fetchOptions: { agent },\r\n  // });\r\n  // return response;\r\n};\r\n","/* eslint-disable @typescript-eslint/naming-convention */\r\nexport const koreanTexts = {\r\n  인터페이스: \"Interface\",\r\n  메시지: \"Message\",\r\n  통합조회: \"Integrate Inquiry\",\r\n  작성자: \"Writer/Author\",\r\n  전체: \"All\",\r\n  인터페이스ID: \"Interface ID\",\r\n  인터페이스ID명: \"Interface ID name\",\r\n  온라인: \"Online\",\r\n  저장완료: \"Saved\",\r\n  결재진행중: \"Payment in progress\",\r\n  등록완료: \"Finished appointment\",\r\n  \"사용자 관리\": \"User management\",\r\n  \"로그인 이력\": \"Login history\",\r\n  사용자이름: \"Username\",\r\n  사용자ID: \"User ID\",\r\n  부서명: \"Department\",\r\n  물리명: \"Physical name\",\r\n  논리명: \"Logical name\",\r\n  타입: \"Type\",\r\n  길이: \"Length\",\r\n  소수: \"Decimal\",\r\n  기본값: \"Default\",\r\n  설명: \"Explanation\",\r\n  권한: \"Role\",\r\n  잠금: \"Lock\",\r\n  생성일: \"Creation date\",\r\n  잠금해제: \"Unlock\",\r\n  연락처: \"Contact\",\r\n  사용자명: \"Username\",\r\n  일반사용자: \"Normal user\",\r\n  결재승인자: \"Approval user\",\r\n  관리자: \"Admin\",\r\n  이름: \"Name\",\r\n  접속일시: \"Connection date and time\",\r\n  기초정보관리: \"Basic information management\",\r\n  \"공통헤더 메시지 관리\": \"Common header message management\",\r\n  공통헤더메시지명: \"Common header message name\",\r\n  유형: \"Category\",\r\n  \"공통헤더 메시지명\": \"Common header message name\",\r\n  대외기관명: \"External organization name\",\r\n  사용여부: \"Using or not\",\r\n  작성일: \"Created date\",\r\n  사용: \"Use\",\r\n  미사용: \"Unused\",\r\n  메세지타입: \"Message type\",\r\n  \"메시지 타입 확장정보 관리\": \"Message type extended information management\",\r\n  정렬순서: \"Sort order\",\r\n  반복타입: \"Repeat type\",\r\n  반복횟수: \"Number of repetitions\",\r\n  마스킹: \"Masking\",\r\n  필드암호화: \"Field encryption\",\r\n  메타체크: \"Meta check\",\r\n  필수: \"Essential\",\r\n  선택: \"Select\",\r\n  필드명: \"Field name\",\r\n  속성: \"Property\",\r\n  확인하다: \"Check\",\r\n  삭제: \"Delete\",\r\n  \"공통코드 명\": \"Common code name\",\r\n  \"기초정보 관리\": \"Basic information management\",\r\n  \"공통코드 관리\": \"Common code management\",\r\n  \"공통코드 등록\": \"Common code registration\",\r\n  \"공통코드 설명\": \"Common code description\",\r\n  \"공통 코드 관리\": \"Common code management\",\r\n  \"공통헤더  메시지 상세\": \"Common header message details\",\r\n  \"메시지 타입 확장정보 상세\": \"Message type extended information details\",\r\n  \"메시지 타입\": \"Message type\",\r\n  \"확장정보 코드명\": \"Extended information code name\",\r\n  \"확장정보 표시명\": \"Extended information display name\",\r\n  공통코드명: \"Common code name\",\r\n  \"메시지 타입 확장정보 등록\": \"Register message type extension information\",\r\n  \"시스템코드 관리\": \"System code management\",\r\n  \"아이디 저장\": \"Save ID\",\r\n  \"올바른 비밀번호를 입력하세요\": \"Please enter the correct password\",\r\n  \"공통코드 상세\": \"Common code details\",\r\n  \"공통코드 편집\": \"Common code editing\",\r\n  \"등록이 완료되었습니다.\": \"Registration has been completed.\",\r\n  \"저장이 완료되었습니다.\": \"Save is complete.\",\r\n  \"삭제가 완료되었습니다.\": \"Deletion is complete.\",\r\n  \"삭제하시겠습니까?\": \"Are you sure you want to delete?\",\r\n  \"공통 코드 세부정보\": \"Common code details\",\r\n  \"올바른 ID(또는 사번, 이름)를 입력하세요.\":\r\n    \"Please enter the correct ID (or employee number or name).\",\r\n};\r\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from \"vscode\";\nimport { isKoreanString } from \"./utils/regex\";\nimport { translateText } from \"./translators\";\nimport {\n  window,\n  DecorationOptions,\n  Range,\n  Disposable,\n  TextEditorDecorationType,\n  TextEditor,\n  workspace,\n  TextDocument,\n  languages,\n  Hover,\n  commands,\n  ExtensionContext,\n} from \"vscode\";\n\n// This method is called when your extension is activated\n// Your extension is activated the very first time the command is executed\nexport function activate(context: ExtensionContext) {\n  let timeout: any = null;\n  let editor = window.activeTextEditor;\n\n  const decoration = window.createTextEditorDecorationType({});\n\n  const updateDecorations = () => {\n    if (!editor || !editor.document) {\n      return;\n    }\n    let document = editor.document;\n    const documentText = document.getText();\n    let matchs = [];\n    let match;\n    let pattern = /'(.*[ㄱ-ㅎ|ㅏ-ㅣ|가-힣.?])'|\"(.*[ㄱ-ㅎ|ㅏ-ㅣ|가-힣.?])\"/g;\n    while ((match = pattern.exec(documentText))) {\n      const string = match[0];\n      const startPos = editor.document.positionAt(match.index);\n      const endPos = editor.document.positionAt(match.index + string.length);\n      const textTranslate = translateText(string.replace(/[\"']/g, \"\"));\n      const decoration = {\n        range: new Range(startPos, endPos),\n        renderOptions: {\n          after: {\n            color: \"rgba(26,26,26)\",\n            contentText: textTranslate,\n            fontStyle: \"normal\",\n            border: `0.5px solid white; border-radius: 2px;`,\n            fontWeight: \"bold\",\n            backgroundColor: \"white\",\n            margin: \"5px\",\n          },\n        },\n      };\n      matchs.push(decoration);\n    }\n    editor.setDecorations(decoration, matchs);\n  };\n\n  const triggerUpdateDecorations = () => {\n    timeout && clearTimeout(timeout);\n    timeout = setTimeout(updateDecorations, 0);\n  };\n\n  // The command has been defined in the package.json file\n  // Now provide the implementation of the command with registerCommand\n  // The commandId parameter must match the command field in package.json\n  const disposable = commands.registerCommand(\n    \"ShinhanDS.scanDocument\",\n    async () => {\n      if (editor) {\n        triggerUpdateDecorations();\n      }\n    }\n  );\n\n  if (editor) {\n    triggerUpdateDecorations();\n  }\n\n  window.onDidChangeActiveTextEditor(\n    function (activeEditor) {\n      editor = activeEditor;\n      if (editor) {\n        triggerUpdateDecorations();\n      }\n    },\n    null,\n    context.subscriptions\n  );\n\n  workspace.onDidChangeTextDocument(\n    function (event) {\n      if (editor && event.document === editor.document) {\n        triggerUpdateDecorations();\n      }\n    },\n    null,\n    context.subscriptions\n  );\n\n  context.subscriptions.push(disposable);\n}\n\nexports.activate = activate;\n"],"names":["translateText","input","lang","koreanTexts","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","activate","context","timeout","editor","window","activeTextEditor","decoration","createTextEditorDecorationType","updateDecorations","document","documentText","getText","match","matchs","pattern","exec","string","startPos","positionAt","index","endPos","length","textTranslate","replace","range","Range","renderOptions","after","color","contentText","fontStyle","border","fontWeight","backgroundColor","margin","push","setDecorations","triggerUpdateDecorations","clearTimeout","setTimeout","disposable","commands","registerCommand","async","onDidChangeActiveTextEditor","activeEditor","subscriptions","workspace","onDidChangeTextDocument","event"],"sourceRoot":""}